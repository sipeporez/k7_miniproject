package com.subway.config.filter;

import java.io.IOException;

import org.springframework.web.filter.OncePerRequestFilter;

import com.auth0.jwt.JWT;
import com.auth0.jwt.algorithms.Algorithm;
import com.subway.persistence.MemberRepository;

import jakarta.servlet.FilterChain;
import jakarta.servlet.ServletException;
import jakarta.servlet.http.HttpServletRequest;
import jakarta.servlet.http.HttpServletResponse;
import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
public class JWTAuthoFilter extends OncePerRequestFilter{
	private final MemberRepository mr;
	private final static String PREFIX = "Bearer ";
	@Override
	protected void doFilterInternal(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)
			throws ServletException, IOException {
		
		String srcToken = request.getHeader("Authorization");
		if (srcToken == null || !srcToken.startsWith(PREFIX)) {
			filterChain.doFilter(request, response);
			return;
		}
		
		String jwtToken = srcToken.replace(PREFIX, "");
		String username = JWT.require(Algorithm.HMAC256("com.subway.project"))
				.build()
				.verify(jwtToken)
				.getClaim("username");
		
		
		
	}

}
