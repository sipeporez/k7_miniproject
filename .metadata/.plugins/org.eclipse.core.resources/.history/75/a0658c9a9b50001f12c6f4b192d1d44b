package com.subway.persistence;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;
import org.springframework.data.jpa.repository.JpaRepository;
import org.springframework.data.jpa.repository.Query;
import org.springframework.data.repository.query.Param;

import com.subway.domain.Board;

public interface BoardRepository extends JpaRepository<Board, Integer> {

	@Query("SELECT b.idx, b.title, b.nickname, b.content, b.createDate FROM Board b")
	Page<Board> getBoards(Pageable pageable);

	@Query("SELECT b.idx, b.title, b.nickname, b.content, b.createDate FROM Board b WHERE b.nickname = :nickname")
	Page<Board> getBoardsByNickname(Pageable pageable, @Param("nickname") String nickname);

	
	@Query("SELECT b.idx, b.title, b.nickname, b.content, b.createDate FROM Board b WHERE b.nickname = :title")
	Page<Board> getBoardsByTitle(Pageable pageable, @Param("title") String title);

	@Query("SELECT b.idx, b.title, b.nickname, b.content, b.createDate FROM Board b WHERE b.nickname = :content")
	Page<Board> getBoardsByContent(Pageable pageable, @Param("content") String content);
	
	@Query(value = "SELECT b.idx, b.title, b.nickname, b.content, b.create_Date, b.userid "
			+ "FROM Board b WHERE MATCH(title, content) AGAINST(:searchKeyword)", 
			nativeQuery = true)
	Page<Board> getBoardsByKeyword(Pageable pageable, @Param("searchKeyword") String searchKeyword);
}
